<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:VpdbAgent"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:dc="clr-namespace:Devart.Controls"
                    xmlns:vmgame="clr-namespace:VpdbAgent.ViewModels.Games"
                    xmlns:vgame="clr-namespace:VpdbAgent.Views.Games"
                    xmlns:vmdl="clr-namespace:VpdbAgent.ViewModels.Downloads"
                    xmlns:vmmsg="clr-namespace:VpdbAgent.ViewModels.Messages"
                    xmlns:vdl="clr-namespace:VpdbAgent.Views.Downloads"
                    xmlns:vmsg="clr-namespace:VpdbAgent.Views.Messages">

    <!--FontFamily x:Key="Black">/Resources/Fonts/#Montserrat Black</-->

    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource VpdbScrollBar}"/>

    <Style TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
    </Style>
    <Style x:Key="Label" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    
    <Style x:Key="Tag" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#60ffffff" />
        <Setter Property="Background" Value="{StaticResource LabelTextBrush}" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="Padding" Value="7,0,7,0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="19" />
    </Style>
    
    <!-- H1 -->
    <Style x:Key="Header1" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Foreground" Value="{DynamicResource LightBrush}" />
    </Style>

    <!-- SEPARATOR -->
    <Style TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="5,0,0,20" />
        <Setter Property="Background" Value="{StaticResource DarkBrush}" />
    </Style>

    <!-- TAB ITEM -->
    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MetroTabItem}">
        <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="32" />
        <Setter Property="controls:ControlsHelper.HeaderFontWeight" Value="Light" />
    </Style>

    <!-- RESIZE GRIP -->
    <Style TargetType="{x:Type ResizeGrip}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Border Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True"
                    Width="10"
                    Height="10">
                        <Path Data="M7.677,7.5300003 L9.677,7.5300003 9.677,9.5300002 7.677,9.5300002 z M3.786,7.5300003 L5.7859998,7.5300003 5.7859998,9.5300002 3.786,9.5300002 z M0,7.5300003 L2,7.5300003 2,9.5300002 0,9.5300002 z M3.786,3.8280003 L5.7859998,3.8280003 5.7859998,5.8280003 3.786,5.8280003 z M7.677,3.7660003 L9.677,3.7660003 9.677,5.7659999 7.677,5.7659999 z M7.677,0 L9.677,0 9.677,2 7.677,2 z" Fill="{TemplateBinding Foreground}" Height="9.53" Stretch="Fill" VerticalAlignment="Top" Width="9.677"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TEXT BOX (INPUT) -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#08ffffff" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" Value="#12ffffff" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#18ffffff" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#28ffffff" />
            </Trigger>

        </Style.Triggers>
        <Setter Property="Foreground" Value="{StaticResource InputTextColorBrush}" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="controls:ControlsHelper.FocusBorderBrush" Value="Transparent" />
        <Setter Property="controls:ControlsHelper.MouseOverBorderBrush" Value="Transparent" />
    </Style>

    <!-- PASSWORD BOX -->
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MetroPasswordBox}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#08ffffff" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" Value="#12ffffff" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#18ffffff" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#28ffffff" />
            </Trigger>

        </Style.Triggers>
        <Setter Property="Foreground" Value="{StaticResource InputTextColorBrush}" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="controls:ControlsHelper.FocusBorderBrush" Value="Transparent" />
        <Setter Property="controls:ControlsHelper.MouseOverBorderBrush" Value="Transparent" />
    </Style>

    <!-- CHECKBOX -->
    <Style TargetType="{x:Type CheckBox}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#20ffffff" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="#60ffffff" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#80ffffff" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Viewbox Width="24" Height="24" Margin="0,6,5,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Canvas Width="30" Height="30">
                                <Path x:Name="Graphic"
                                      Data="M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z" 
                                      Fill="{TemplateBinding Foreground}" />
                            </Canvas>
                        </Viewbox>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Graphic" Value=".56" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true"/>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z" />
                            <Setter Property="Opacity" TargetName="Graphic" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- TOGGLE BUTTON -->
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Background" Value="{StaticResource LabelTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="30" Height="20">
                            <!-- outer line -->
                            <Border Canvas.Left="0" Width="30" Height="20" Background="Transparent" 
                                    BorderBrush="{TemplateBinding Background}" CornerRadius="10" BorderThickness="2"/>
                            <!-- knob -->
                            <Ellipse x:Name="Knob" Canvas.Top="4" Canvas.Left="4" Width="12" Height="12" Fill="{TemplateBinding Background}">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" >
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource PrimaryColor}" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource PrimaryColor}" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Knob">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="10" KeySpline="0, 1, 0.6, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource LabelTextColor}" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource LabelTextColor}" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Knob">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="10"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SMOOTH PANEL ITEMSCONTROL -->
    <Style x:Key="SmoothPanel" TargetType="{x:Type ItemsControl}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ScrollViewer KeyboardNavigation.IsTabStop="True" CanContentScroll="True">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dc:SmoothPanel Background="{StaticResource WhiterBrush}">
                        <dc:SmoothPanel.Templates>
                            <dc:SmoothPanelTemplate ViewModel="{x:Type vmgame:GameItemViewModel}" View="{x:Type vgame:GameItemView}" />
                            <dc:SmoothPanelTemplate ViewModel="{x:Type vmdl:DownloadItemViewModel}" View="{x:Type vdl:DownloadItemView}" />
                            <dc:SmoothPanelTemplate ViewModel="{x:Type vmmsg:MessageItemViewModel}" View="{x:Type vmsg:MessageItemView}" />
                        </dc:SmoothPanel.Templates>
                    </dc:SmoothPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>